{"version":3,"sources":["images/logo.png","images/resume_head_shot.jpg","components/sidebar/Sidebar.js","components/calendar/Calendar.js","components/resume/WorkExperience.js","components/resume/Resume.js","components/todolist/Todo.js","components/todolist/TodoList.js","components/pomodorotimer/PomodoroTimer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navData","text","url","Sidebar","className","src","Logo","alt","map","item","i","key","href","Calendar","useState","Date","date","setDate","day","getDate","year","getFullYear","month","getMonth","weekday","getDay","nowTime","toTimeString","split","useEffect","timer","setInterval","clearInterval","WorkExperience","workData","console","log","name","substr","job_title","industry","location","job_content","time","length_of_time","data","titleData","connectionData","autobiographyData","frontEndSkill","backEndSkill","work_experience","Resume","indexOf","HeadShot","Todo","props","delete","bind","mark","this","todo","deleteTodo","id","markTodo","isCompleted","onClick","Component","TodoList","state","todos","todoText","todoId","filter","countCompleted","addTodo","handleChange","changeFilter","todoData","window","localStorage","getItem","length","oldTodos","JSON","parse","setState","num","prevProps","prevState","setItem","stringify","e","target","value","document","getElementsByTagName","alert","deleteCountCompleted","handleCountCompleted","onSubmit","preventDefault","type","placeholder","onChange","PomodoroTimer","speed","seconds","minutes","complete","alpha","alphaKey","stateWord","countWorkingTime","countRestTime","countAlphaTime","handleClickStart","handleClickReset","changeSpeed","workTimer","alphaTimer","Infinity","workingTime","restTimer","restingTime","keyCode","replace","Number","style","color","width","defaultValue","App","path","exact","component","render","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.497961c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.93fe7c3e.png\";","module.exports = __webpack_public_path__ + \"static/media/resume_head_shot.ca4465e6.jpg\";","import React from 'react';\r\nimport Logo from '../../images/logo.png';\r\nimport '../../scss/sidebar.scss';\r\n\r\nconst navData = [\r\n    {\r\n        text: 'Resume',\r\n        url: '/portfolio/#/',\r\n    },\r\n    {\r\n        text: 'Todo List',\r\n        url: '/portfolio/#/todo_list',\r\n    },\r\n    {\r\n        text: 'PomodoroTimer',\r\n        url: '/portfolio/#/pomodoro_timer',\r\n    },\r\n    {\r\n        text: 'Search(API)',\r\n        url: '/portfolio/#/search_api',\r\n    }\r\n]\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar_wrapper\">\r\n            <div className=\"sidebar\">\r\n                <div className=\"photo\">\r\n                    <img src={Logo} alt=\"isME\"></img>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <h2>Daniel's</h2>\r\n                    <p>-Portfolio-</p>\r\n                </div>\r\n                <div className=\"nav\">\r\n                    <ul>\r\n                        {navData.map((item, i) => {\r\n                            return(\r\n                                <li key={i}>\r\n                                    <a href={item.url}>{item.text}</a>\r\n                                </li>\r\n                                )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"remarks\">\r\n                    <p>一個立志成為</p>\r\n                    <p>前端大師的北漂兒</p>\r\n                    <p>在此用高雄的溫度</p>\r\n                    <p>來寫下對於前端的熱情</p>\r\n                    <p>（～￣▽￣～）</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, { useState, useEffect } from 'react';\r\nimport '../../scss/calendar.scss';\r\n\r\nconst Calendar = () => {\r\n\r\n    const week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n    let [date, setDate] = useState(new Date());\r\n    const day = date.getDate();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const weekday = date.getDay();\r\n    const nowTime = date.toTimeString().split(' ')[0];\r\n\r\n    useEffect(() => {\r\n        let timer = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n        return () => clearInterval(timer);\r\n    }, [date]);\r\n\r\n    return (\r\n        <div className=\"calendar_wrapper\">\r\n            <div className=\"title\">\r\n                <span>CALENDAR</span>\r\n            </div>\r\n            <div className=\"calendar\">\r\n                <div className=\"year\">\r\n                    <span>{year}</span>\r\n                </div>\r\n                <div className=\"date\">\r\n                    <span>{month} / {day}</span>\r\n                </div>\r\n                <div className=\"weekday\">\r\n                    <span>{week[weekday]}</span>\r\n                </div>\r\n                <div className=\"time_now\">\r\n                    <span>{nowTime}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\r\n\r\nconst WorkExperience = (workData) => {\r\n    console.log(workData)\r\n    return (\r\n        <>\r\n            {workData.workData.map((item, i) => {\r\n                return (\r\n                    <div key={i} className=\"work_item\">\r\n                        <div className=\"left\">\r\n                            <div className=\"font\">\r\n                                {(item.name).substr(0,1)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"center\">\r\n                            <h2>{item.job_title}</h2>\r\n                            <h3>{item.name} / {item.industry}</h3>\r\n                            <p>{item.location}</p>\r\n                            <p>{item.job_content}</p>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <p>{item.time}</p>\r\n                            <p>{item.length_of_time}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkExperience;","import React from 'react';\r\nimport HeadShot from '../../images/resume_head_shot.jpg';\r\nimport '../../scss/resume.scss';\r\nimport WorkExperience from './WorkExperience';\r\n\r\nconst data = {\r\n    titleData: ['宋紹寧 Daniel', 'Just enjoy your choice.', '來自高雄的熱血青年', 'Taipei-Taiwan'],\r\n    connectionData: ['+886-983653624', 'activearmy720@gmail.com'],\r\n    autobiographyData: '樂於團隊分工，喜愛與夥伴一同達成目標的喜悅，在過去的工作中透過了團隊分工與溝通得到了許多寶貴的經驗，這些經驗到現在依然非常受用。高中時就對程式設計非常有興趣，這幾年間有注意到台灣有許多的企業在做IT整合，一直都有在自學，但成效不如預期，所以離職後去了職訓局受訓，才又踏上了這條路，一直記得有位前輩告訴我「工程師可以改變這個世界」，更加堅定了自己想要在這條道路上發展的信念。最近看到口罩地圖為社會帶來的貢獻，更激勵著自己想要在程式上的進步，雖然剛轉職當工程師還不到一年，也知悉在這個行業可學習的技術非常豐富，所以更需要為自己設下學習目標來達成，讓自己再不久的將來有能力開發出對這個社會有意義，使人們生活能夠更便利的程式。',\r\n    frontEndSkill: ['HTML', 'CSS', 'JavaScript', 'J-Query', 'React'],\r\n    backEndSkill: ['PHP', 'MySQL', 'Laravel'],\r\n    work_experience: [\r\n        {\r\n            name: '邁爾思國際服務有限公司',\r\n            job_content: '串接金流API',\r\n            job_title: 'PHP工程師',\r\n            industry: '軟體設計工程師',\r\n            location: '台北市內湖區',\r\n            time: '2020/4~2020/6',\r\n            length_of_time: '3個月'\r\n        },\r\n        {\r\n            name: '阿物股份有限公司',\r\n            job_content: '共同維護及開發客戶寄件行銷系統，主要負責ROAS(廣告投資報酬率)Dashboard的部分，使用Laravel框架',\r\n            job_title: 'PHP工程師',\r\n            industry: '軟體設計工程師',\r\n            location: '台北市中山區',\r\n            time: '2020/2~2020/3',\r\n            length_of_time: '2個月'\r\n        },\r\n        {\r\n            name: '登泰國際物流有限公司',\r\n            job_content: '針對進出口客戶開發：海運、空運進出口、轉口運送承攬及倉儲報關等業務',\r\n            job_title: '行銷專員',\r\n            industry: '國內業務人員',\r\n            location: '高雄市苓雅區',\r\n            time: '2019/2~2019/5',\r\n            length_of_time: '4個月'\r\n        },\r\n        {\r\n            name: '國泰人壽',\r\n            job_content: '銷售商品、客戶服務、組織發展',\r\n            job_title: '業務主任',\r\n            industry: '保險業務',\r\n            location: '高雄市前金區',\r\n            time: '2018/9~2019/1',\r\n            length_of_time: '5個月'\r\n        },\r\n        {\r\n            name: '富邦人壽',\r\n            job_content: '銷售商品、客戶服務、組織發展',\r\n            job_title: '行銷專員',\r\n            industry: '保險業務',\r\n            location: '高雄市三民區',\r\n            time: '2017/5~2018/8',\r\n            length_of_time: '1年4個月'\r\n        },\r\n        {\r\n            name: '尚亨運動用品',\r\n            job_content: '業績管理、人員培訓管理、賣場陳列管理、倉庫管理、庫存管理、網路行銷管理、培訓講師',\r\n            job_title: '店長',\r\n            industry: '賣場管理人員',\r\n            location: '高雄市鳳山區',\r\n            time: '2014/12~2017/2',\r\n            length_of_time: '2年3個月'\r\n        },\r\n        {\r\n            name: '一亨運動用品',\r\n            job_content: '賣場清潔、倉務、商品陳列、銷售商品、售後服務',\r\n            job_title: '門市正職人員',\r\n            industry: '專櫃人員',\r\n            location: '高雄市新興區',\r\n            time: '2013/9~2014/12',\r\n            length_of_time: '1年4個月'\r\n        },\r\n        {\r\n            name: '寒軒大飯店',\r\n            job_content: '開宴前準備、上菜、顧客服務、宴後清掃',\r\n            job_title: '假日班外場服務生',\r\n            industry: '餐飲服務生',\r\n            location: '高雄市苓雅區',\r\n            time: '2006/7~2007/7',\r\n            length_of_time: '1年'\r\n        }\r\n    ]\r\n}\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div className=\"resume_wrapper\">\r\n            <div className=\"header\">\r\n                <div className=\"text\">\r\n                    <div className=\"title\">\r\n                        {data.titleData.map((item, i) => {\r\n                            return i === 0 ? <h2 key={i}>{item}</h2> : <h3 key={i}>{item}</h3>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"connection\">\r\n                        {data.connectionData.map((item, i) => {\r\n                            return item.indexOf('@') < 1 ? <a href={`tel:${item}`} key={i}>{item}</a> : <a href={`mailto:${item}`} key={i}>{item}</a>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <img src={HeadShot} alt=\"isMe\"></img>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"autobiography\">\r\n                    {data.autobiographyData.split('。').map((item, i) => {\r\n                        return item !== \"\" ? <p key={i}>{item}。</p> : null\r\n                    })}\r\n                </div>\r\n                <div className=\"skills\">\r\n                    <div className=\"title\">\r\n                        <h2>Skills</h2>\r\n                    </div>\r\n                    <div className=\"front_end\">\r\n                        <h2>Front-End</h2>\r\n                        <ul>\r\n                            {data.frontEndSkill.map((item, i) => {\r\n                                return <li key={i}>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"back_end\">\r\n                        <h2>Back-End</h2>\r\n                        <ul>\r\n                            {data.backEndSkill.map((item, i) => {\r\n                                return <li key={i}>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"work_experience\">\r\n                    <div className=\"title\">\r\n                        <h2>Work Experience</h2>\r\n                    </div>\r\n                    <WorkExperience workData={data.work_experience} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume;","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.delete = this.delete.bind(this);\r\n        this.mark = this.mark.bind(this);\r\n    }\r\n\r\n    delete() {\r\n        const { todo, deleteTodo } = this.props;\r\n        deleteTodo(todo.id);\r\n    }\r\n\r\n    mark() {\r\n        const { todo, markTodo } = this.props;\r\n        markTodo(todo.id);\r\n    }\r\n\r\n    render() {\r\n        const { todo } = this.props;\r\n        return (\r\n            <div\r\n                className={`list-item ${todo.isCompleted ? 'completed' : ''}`}\r\n            >\r\n                <div className=\"list-item_state\">\r\n                    {todo.isCompleted ? 'O' : 'X'}\r\n                </div>\r\n                <div className=\"list-item_content\">\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"list-item_action\">\r\n                    <button\r\n                        className={`${todo.isCompleted ? 'mark_completed' : ''}`}\r\n                        onClick={this.mark}\r\n                    >\r\n                        {todo.isCompleted ? '標示成未完成' : '標示成完成'}\r\n                    </button>\r\n                    <button\r\n                        className={`${todo.isCompleted ? 'mark_completed' : ''}`}\r\n                        onClick={this.delete}\r\n                    >\r\n                        刪除\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\nimport '../../scss/todolist.scss'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [],\r\n            todoText: '',\r\n            todoId: 1,\r\n            filter: 'all',\r\n            countCompleted: 0\r\n        }\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n        this.markTodo = this.markTodo.bind(this);\r\n        this.changeFilter = this.changeFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const todoData = window.localStorage.getItem('todoapp');\r\n        // 因為型態是string，所以判斷長度>2\r\n        if (todoData) {\r\n            if (todoData.length > 2) {\r\n                const oldTodos = JSON.parse(todoData);\r\n                this.setState({\r\n                    todos: oldTodos,\r\n                    todoId: oldTodos[oldTodos.length - 1].id + 1\r\n                })\r\n            }\r\n\r\n            let num = 0;\r\n            JSON.parse(todoData).map(todo => {\r\n                if (todo.isCompleted === true) {\r\n                    num++;\r\n                }\r\n                return num\r\n            })\r\n            this.setState({ countCompleted: num });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.todos !== this.state.todos) {\r\n            window.localStorage.setItem(\r\n                'todoapp', JSON.stringify(this.state.todos)\r\n            )\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            todoText: e.target.value\r\n        })\r\n    }\r\n\r\n    addTodo() {\r\n        if (!document.getElementsByTagName('input')[0].value) {\r\n            return alert('請輸入項目!');\r\n        }\r\n        const { todoText, todos } = this.state\r\n        this.setState({\r\n            todos: [...todos, {\r\n                id: this.state.todoId,\r\n                isCompleted: false,\r\n                text: todoText\r\n            }],\r\n            todoText: '',\r\n            todoId: this.state.todoId + 1,\r\n        })\r\n        document.getElementsByTagName('input')[0].value = '';\r\n    }\r\n\r\n    deleteTodo(id) {\r\n        this.deleteCountCompleted(id);\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        })\r\n    }\r\n\r\n    markTodo(id) {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id !== id) {\r\n                    return todo\r\n                }\r\n                return {\r\n                    ...todo,\r\n                    isCompleted: !todo.isCompleted,\r\n                }\r\n            }),\r\n        })\r\n        this.handleCountCompleted(id);\r\n    }\r\n\r\n    changeFilter() {\r\n        this.state.filter === 'all' ?\r\n            this.setState({ filter: 'completed' }) :\r\n            this.setState({ filter: 'all' })\r\n    }\r\n\r\n    handleCountCompleted(id) {\r\n        this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                if (todo.isCompleted === false) {\r\n                    this.setState({ countCompleted: this.state.countCompleted + 1 })\r\n                } else {\r\n                    this.setState({ countCompleted: this.state.countCompleted - 1 })\r\n                }\r\n            }\r\n            return id\r\n        })\r\n    }\r\n\r\n    deleteCountCompleted(id) {\r\n        this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                if (todo.isCompleted === true) {\r\n                    this.setState({ countCompleted: this.state.countCompleted - 1 })\r\n                } \r\n            }\r\n            return id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todoWrapper\">\r\n                <div className=\"title\">\r\n                    <h1>TodoList</h1>\r\n                </div>\r\n                <div className=\"addBar\">\r\n                    <form onSubmit={(e) => { e.preventDefault() }}>\r\n                        <input type=\"text\" placeholder=\"請輸入待處理事項\" onChange={this.handleChange} />\r\n                        <button\r\n                            className=\"add-todo\"\r\n                            onClick={this.addTodo}\r\n                        >\r\n                            新增\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"filters\">\r\n                    <span\r\n                        className={this.state.filter === 'all' ? 'selected' : null}\r\n                        onClick={this.changeFilter}\r\n                    >\r\n                        全部\r\n                        </span>\r\n                    <span\r\n                        className={this.state.filter === 'completed' ? 'selected' : null}\r\n                        onClick={this.changeFilter}\r\n                    >\r\n                        已完成\r\n                        </span>\r\n                </div>\r\n                <div className=\"list\">\r\n                    {this.state.todos.filter(todo =>\r\n                        this.state.filter === 'completed'\r\n                            ? todo.isCompleted\r\n                            : true\r\n                    )\r\n                        .map((todo) =>\r\n                            <Todo\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                                deleteTodo={this.deleteTodo}\r\n                                markTodo={this.markTodo}\r\n                            />\r\n                        )}\r\n                    {this.state.filter === 'completed' && this.state.countCompleted === 0\r\n                        ? <div className=\"no_completed\">目前沒有已完成事項</div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport '../../scss/pomodoroTimer.scss';\r\n\r\nclass PomodoroTimer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            speed: 1000,\r\n            seconds: 0,\r\n            minutes: 0,\r\n            complete: 0,\r\n            alpha: 0,\r\n            alphaKey: false,\r\n            stateWord: 'Working...',\r\n            key: false,\r\n        }\r\n        this.countWorkingTime = this.countWorkingTime.bind(this);\r\n        this.countRestTime = this.countRestTime.bind(this);\r\n        this.countAlphaTime = this.countAlphaTime.bind(this);\r\n        this.handleClickStart = this.handleClickStart.bind(this);\r\n        this.handleClickReset = this.handleClickReset.bind(this);\r\n        this.changeSpeed = this.changeSpeed.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.key !== this.state.key && this.state.key === true) {\r\n            this.workTimer = setInterval(this.countWorkingTime, this.state.speed);\r\n            this.alphaTimer = setInterval(this.countAlphaTime, 100);\r\n        }\r\n    }\r\n\r\n    countWorkingTime() {\r\n        if(this.state.speed === Infinity) {\r\n            this.setState({ key: false });\r\n            clearInterval(this.workTimer);\r\n            clearInterval(this.alphaTimer);\r\n            return alert(\"請輸入正確速度\")\r\n        }\r\n\r\n        this.setState({\r\n            stateWord: 'Working...',\r\n            seconds: this.state.seconds + 1,\r\n            complete: this.state.complete + 0.067\r\n        })\r\n\r\n        if (this.state.seconds === 60) {\r\n            this.setState({\r\n                seconds: 0,\r\n                minutes: this.state.minutes + 1\r\n            })\r\n        }\r\n\r\n        if (this.state.minutes >= 24) {\r\n            this.setState({ stateWord: 'Finish...' })\r\n        }\r\n\r\n        if (this.state.minutes >= this.props.workingTime) {\r\n            clearInterval(this.workTimer);\r\n            this.setState({\r\n                seconds: 0,\r\n                minutes: 0,\r\n                complete: 0,\r\n                stateWord: 'Done',\r\n                alpha: 1,\r\n                key: false,\r\n            });\r\n            alert('Time up for a break!!');\r\n            this.restTimer = setInterval(this.countRestTime, this.state.speed);\r\n        }\r\n    }\r\n\r\n    countRestTime() {\r\n        this.setState({\r\n            stateWord: 'Resting...',\r\n            seconds: this.state.seconds + 1,\r\n            complete: this.state.complete + 0.34\r\n        })\r\n\r\n        if (this.state.seconds === 60) {\r\n            this.setState({\r\n                seconds: 0,\r\n                minutes: this.state.minutes + 1\r\n            })\r\n        }\r\n\r\n        if (this.state.minutes >= this.props.restingTime) {\r\n            clearInterval(this.restTimer);\r\n            clearInterval(this.alphaTimer);\r\n            this.setState({\r\n                seconds: 0,\r\n                minutes: 0,\r\n                complete: 0,\r\n                stateWord: 'Over',\r\n                alpha: 1,\r\n                key: false,\r\n            });\r\n            alert('Resting Over!!');\r\n        }\r\n    }\r\n\r\n    countAlphaTime() {\r\n        if (this.state.alphaKey === false) {\r\n            this.setState({ alpha: this.state.alpha + 0.15 })\r\n            if (this.state.alpha >= 1) {\r\n                this.setState({ alphaKey: true })\r\n            }\r\n        } else if (this.state.alphaKey === true) {\r\n            this.setState({ alpha: this.state.alpha - 0.15 })\r\n            if (this.state.alpha <= 0) {\r\n                this.setState({ alphaKey: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClickStart() {\r\n        this.setState({ key: true });\r\n    }\r\n\r\n    handleClickReset() {\r\n        this.setState({\r\n            seconds: 0,\r\n            minutes: 0,\r\n            complete: 0,\r\n            stateWord: 'Over',\r\n            alpha: 1,\r\n            key: false\r\n        })\r\n        clearInterval(this.workTimer);\r\n        clearInterval(this.alphaTimer);\r\n        clearInterval(this.restTimer);\r\n    }\r\n\r\n    changeSpeed(e) {\r\n        if(e.keyCode !== 37 && e.keyCode !== 39) {\r\n            e.target.value = e.target.value.replace(/\\D/g,'')\r\n        }\r\n        if (e.target.value > 1000 || e.target.value === \"0\") {\r\n            e.target.value = 1;\r\n            alert('請輸入正確數字');\r\n        }\r\n        this.setState({\r\n            speed: 1000 / Number(e.target.value),\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pomodoroTimerWrapper\">\r\n                <div className=\"container\">\r\n                    <div className=\"triangle01\"></div>\r\n                    <div className=\"triangle02\"></div>\r\n                    <div className=\"triangle03\"></div>\r\n                    <div className=\"title\">\r\n                        <h1>PomodoroTimer</h1>\r\n                        <h4>\r\n                            For a total time of <span>{this.props.workingTime + this.props.restingTime}</span> minutes.\r\n                        </h4>\r\n                        <h4>\r\n                            This timer runs for <span>{this.props.workingTime}</span> minutes\r\n                        </h4>\r\n                        <h4>\r\n                            followed by rest of <span>{this.props.restingTime}</span> minutes.\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"scheduleWrapper\">\r\n                        <div className=\"schedule\">\r\n                            <div className=\"text\" style={{ color: `rgba(86, 86, 86, ${this.state.alpha})` }}>\r\n                                {this.state.stateWord}\r\n                            </div>\r\n                            <div className=\"complete\" style={{ width: `${this.state.complete}%` }}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"prompt\">\r\n                        There are {this.state.minutes} minutes {this.state.seconds} seconds elapsed.\r\n                    </div>\r\n                    <div className=\"ctrlBar\">\r\n                        <div>\r\n                            <button onClick={this.handleClickStart}>START</button>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={this.handleClickReset}>RESET</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"testBar\">\r\n                    <div className=\"triangle04\"></div>\r\n                    <h3>測試調速</h3>\r\n                    <input type=\"text\" onChange={this.changeSpeed} defaultValue={this.state.speed / 1000} />倍\r\n                    <p>*最高1000倍</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PomodoroTimer;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Calender from './components/calendar/Calendar';\nimport Resume from './components/resume/Resume';\nimport TodoList from './components/todolist/TodoList';\nimport PomodoroTimer from './components/pomodorotimer/PomodoroTimer';\nimport './scss/app.scss';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Sidebar />\n            <Calender />\n            <Route path=\"/\" exact component={Resume} />\n            <Route path=\"/todo_list\" component={TodoList} />\n            <Route\n                path=\"/pomodoro_timer\"\n                render={(props) => <PomodoroTimer workingTime={25} restingTime={5} {...props} />}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}